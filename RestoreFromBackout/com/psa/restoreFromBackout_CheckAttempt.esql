BROKER SCHEMA com.psa


CREATE COMPUTE MODULE restoreFromBackout_CheckAttempt
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyEntireMessage();
		
		IF (FIELDTYPE(InputRoot.MQRFH2.usr.restore.attempt) IS NOT NULL) THEN
			IF (InputRoot.MQRFH2.usr.restore.attempt > 2) THEN
				LOG EVENT SEVERITY 1 CATALOG 'BIPmsgs' MESSAGE 2951 VALUES('To many retries');
				PROPAGATE TO TERMINAL 'out1';
				RETURN FALSE;
			END IF;
			SET OutputRoot.MQRFH2.usr.restore.attempt = InputRoot.MQRFH2.usr.restore.attempt + 1;
		ELSE
			IF (FIELDTYPE(InputRoot.MQRFH2) IS NULL) THEN 
				CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN 'MQRFH2';
			END IF;
			
			IF (FIELDTYPE(InputRoot.MQRFH2.usr) IS NULL) THEN 
				CREATE LASTCHILD OF OutputRoot.MQRFH2 NAME 'usr';
			END IF;
			
			IF (FIELDTYPE(InputRoot.MQRFH2.usr.restore) IS NULL) THEN 
				CREATE LASTCHILD OF OutputRoot.MQRFH2.usr NAME 'restore';
				SET OutputRoot.MQRFH2.usr.restore.attempt = 1;
				SET OutputRoot.MQRFH2.usr.restore.source = Environment.Variables.backout.sourceQueue;
				SET OutputRoot.MQRFH2.usr.restore.target = Environment.Variables.backout.targetQueue;
			END IF;
		END IF;		
		
		LOG EVENT SEVERITY 1 CATALOG 'BIPmsgs' MESSAGE 2951 VALUES('Writing to ' || Environment.Variables.backout.targetQueue);
		SET OutputLocalEnvironment = InputLocalEnvironment;
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = Environment.Variables.backout.targetQueue;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
