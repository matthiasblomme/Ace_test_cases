 --DECLARE holdQueueName EXTERNAL CHARACTER '';

CREATE COMPUTE MODULE ToHoldQueue
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		CALL CopyEntireMessage();	
		
		--set hold queue as destination
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = holdQueueName;
		

		 --handel log
       SET Environment.Variables.Log.Entry.type = 'ERROR';
	   SET Environment.Variables.Log.Entry.status = 'mqoutput-failure';
	   SET Environment.Variables.Log.Entry.destinationQueue = InputRoot.MQDLH.DestQName;
	   SET Environment.Variables.Log.Entry.guid = Environment.Variables.ActivityId;
	   SET Environment.Variables.Log.Entry.aceApplication = ApplicationLabel;
	   SET Environment.Variables.Log.Entry.messageFlow = MessageFlowLabel; 
	   PROPAGATE TO LABEL 'LOG' DELETE NONE;
	   
	   RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
