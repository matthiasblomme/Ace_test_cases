

CREATE COMPUTE MODULE XmlFolderFieldType_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		SET OutputRoot.JSON.Data = InputRoot.XMLNSC;
		SET OutputRoot.JSON.Data.FieldType.field1 = FIELDTYPE(InputRoot.XMLNSC.root.field1);
		SET OutputRoot.JSON.Data.FieldType.field1FolderRef = XMLNSC.Folder;
		SET OutputRoot.JSON.Data.FieldType.field1FolderMatch = (FIELDTYPE(InputRoot.XMLNSC.root.field1) = XMLNSC.Folder);
		
		SET OutputRoot.JSON.Data.FieldType.field1NameRef = Name;
		SET OutputRoot.JSON.Data.FieldType.field1NameMatch = (FIELDTYPE(InputRoot.XMLNSC.root.field1) = Name);
		
		SET OutputRoot.JSON.Data.FieldType.field1CustomRef = (XMLNSC.Folder - 0xFF00000000);
		SET OutputRoot.JSON.Data.FieldType.field1CustomMatch = (FIELDTYPE(InputRoot.XMLNSC.root.field1) = (XMLNSC.Folder - 0xFF00000000));
		SET OutputRoot.JSON.Data.FieldType.nil = FIELDTYPE(InputRoot.XMLNSC.root.field1.nil);
		SET OutputRoot.JSON.Data.FieldType.nilRef = XMLNSC.Value;
		SET OutputRoot.JSON.Data.FieldType.nilMatch = (FIELDTYPE(InputRoot.XMLNSC.root.field1.nil) = XMLNSC.Value);
		SET OutputRoot.JSON.Data.ReferenceTypes.Name = Name;
		SET OutputRoot.JSON.Data.ReferenceTypes.Value = Value;
		SET OutputRoot.JSON.Data.ReferenceTypes.NameValue = NameValue;
		SET OutputRoot.JSON.Data.ReferenceTypes.XMLNSC.AnyValue = XMLNSC.AnyValue;
		SET OutputRoot.JSON.Data.ReferenceTypes.XMLNSC.Attribute = XMLNSC.Attribute;
		SET OutputRoot.JSON.Data.ReferenceTypes.XMLNSC.Element = XMLNSC.Element;
		SET OutputRoot.JSON.Data.ReferenceTypes.XMLNSC.Field = XMLNSC.Field;
		SET OutputRoot.JSON.Data.ReferenceTypes.XMLNSC.Folder = XMLNSC.Folder;
		SET OutputRoot.JSON.Data.ReferenceTypes.XMLNSC.Value = XMLNSC.Value;
				
								
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
