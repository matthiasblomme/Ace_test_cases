

CREATE COMPUTE MODULE TestArray_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE LASTCHILD OF OutputRoot.JSON NAME 'Data';
		
		IF CARDINALITY(InputRoot.JSON.Data.cards.*[]) = 0 THEN
			SET OutputRoot.JSON.Data.ArrayNoChildren = 'true';
		END IF; 
		
		IF InputRoot.JSON.Data.cards.*[1] IS NULL THEN
			SET OutputRoot.JSON.Data.ArrayNoFirstChild = 'true';
		END IF;
		
		IF NOT EXISTS(InputRoot.JSON.Data.cards.*[])  THEN
			SET OutputRoot.JSON.Data.ArrayChildDoesNotExists = 'true';
		END IF;  
		
		IF InputRoot.JSON.Data.cards2 IS NULL THEN
			SET OutputRoot.JSON.Data.ArrayIsNull = 'true';
		END IF;
		
		IF NOT EXISTS(InputRoot.JSON.Data.cards2[]) THEN
			SET OutputRoot.JSON.Data.ArrayDoesNotExist = 'true';
		END IF;
		
		IF FIELDTYPE(InputRoot.JSON.Data.cards2) IS NULL THEN
			SET OutputRoot.JSON.Data.FieldTypeNull = 'true';
		END IF;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

